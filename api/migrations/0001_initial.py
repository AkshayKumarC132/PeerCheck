# Generated by Django 5.2.4 on 2025-07-24 05:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='KnoxAuthtoken',
            fields=[
                ('digest', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
                ('expiry', models.DateTimeField(blank=True, null=True)),
                ('token_key', models.CharField(blank=True, max_length=8, null=True)),
            ],
            options={
                'db_table': 'knox_authtoken',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpeakerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('embedding', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_sop_version', models.CharField(default='1.0', max_length=50)),
                ('timeout_threshold', models.IntegerField(default=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(db_column='user_id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('theme', models.CharField(default='light', max_length=50)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('operator', 'Operator'), ('reviewer', 'Reviewer')], default='operator', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user_profile',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AudioFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_path', models.CharField(max_length=255)),
                ('original_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('transcription', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('keywords_detected', models.TextField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('report_path', models.CharField(blank=True, max_length=255, null=True)),
                ('diarization', models.JSONField(blank=True, null=True)),
                ('coverage', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audio_files_uploaded', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('audio_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.audiofile')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedbacks_submitted', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('document_type', models.CharField(choices=[('sop', 'Standard Operating Procedure'), ('procedure', 'Procedure Document'), ('manual', 'Manual'), ('guideline', 'Guideline'), ('checklist', 'Checklist'), ('other', 'Other')], default='sop', max_length=20)),
                ('file_path', models.CharField(max_length=500)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('content_type', models.CharField(blank=True, max_length=100, null=True)),
                ('extracted_text', models.TextField(blank=True, null=True)),
                ('upload_status', models.CharField(default='pending', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reference_documents_uploaded', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reference_documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('matched_words', models.IntegerField(default=0)),
                ('total_words', models.IntegerField(default=0)),
                ('coverage', models.FloatField(default=0.0)),
                ('processed_docx_path', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('audio_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.audiofile')),
                ('reference_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.referencedocument')),
            ],
        ),
        migrations.AddField(
            model_name='audiofile',
            name='reference_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audio_comparisons', to='api.referencedocument'),
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('active', 'Active'), ('archived', 'Archived')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('audio_files', models.ManyToManyField(blank=True, related_name='sessions', to='api.audiofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField(blank=True, null=True)),
                ('resolved_flag', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_reviews', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_reviews', to='api.session')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('audio_upload', 'Audio Upload'), ('feedback_submit', 'Feedback Submit'), ('sop_create', 'SOP Create'), ('sop_update', 'SOP Update'), ('sop_delete', 'SOP Delete'), ('audiofile_delete', 'AudioFile Delete'), ('feedback_update', 'Feedback Update'), ('feedback_delete', 'Feedback Delete'), ('review_submit', 'Review Submit'), ('feedbackreview_update', 'FeedbackReview Update'), ('feedbackreview_delete', 'FeedbackReview Delete'), ('userprofile_update', 'UserProfile Update'), ('userprofile_delete', 'UserProfile Delete'), ('session_status_update', 'Session Status Update'), ('session_update', 'Session Update'), ('session_delete', 'Session Delete')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.IntegerField()),
                ('object_type', models.CharField(max_length=50)),
                ('details', models.JSONField(default=dict)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='api.session')),
            ],
        ),
        migrations.CreateModel(
            name='SOP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sops_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='session',
            name='sop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='api.sop'),
        ),
        migrations.AddField(
            model_name='audiofile',
            name='sop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audio_files', to='api.sop'),
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(default='en', max_length=10)),
                ('notification_prefs', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SessionUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speaker_tag', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_users', to='api.session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('session', 'user')},
            },
        ),
        migrations.CreateModel(
            name='SOPStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.PositiveIntegerField()),
                ('instruction_text', models.TextField()),
                ('expected_keywords', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='api.sop')),
            ],
            options={
                'unique_together': {('sop', 'step_number')},
            },
        ),
    ]
